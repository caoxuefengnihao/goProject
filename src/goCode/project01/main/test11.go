package main

/*
go 语言不是一种传统的面向对象编程语言 它里面没有类和集成的概念
但是go语言里面有非常灵活的接口概念 通过他可以实现很多面向对象的特性
很多面向对象的语言都有相识的接口 但是go语言中的接口类型的独特之处在于它是
他是隐式实现的  也就是说我们没有必要对于给定的具体类型定义所有瞒住的接口类型 简单地拥有
一些必要的方法就足够了


这种设计可以让你创建一个新的接口类型满足已经存在的具体类型却不会改变这些类型的定义
当我们使用的类型来自于不受我们控制的包时 这种设计尤其有用

接口类型是对其他类型行为的抽象和概括 因为接口类型不会和特定的实现细节绑定在一起 通过这种抽象的方式我们可以让我们的’
函数更加灵活和更具有适应能力

接口是双方约定的一种合作协议 接口实现值者不需要关心接口会被怎样使用 调用者也不需要关心接口的实现细节
接口是一种类型也是一种抽象结构 不会暴露出所含的数据的格式 类型及结构
接口的声明格式
type 接口类型名字 interface{
	方法1（参数列表1） 返回值列表1
	方法2（参数列表2） 返回值列表2
	......
}
*/
import "fmt"

func main() {

}
